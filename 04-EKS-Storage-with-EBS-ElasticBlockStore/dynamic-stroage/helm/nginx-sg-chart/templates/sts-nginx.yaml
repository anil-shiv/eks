apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nginx-sg-chart.fullname" . }}
  labels:
    {{- include "nginx-sg-chart.labels" . | nindent 4 }}
spec:
  serviceName: "nginxchart-nginx-sg-chart"
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  #podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "nginx-sg-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nginx-sg-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name:  {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        readinessProbe:
            httpGet:
              path: {{.Values.readinessProbe.httpGet.path}}
              port: {{.Values.readinessProbe.httpGet.port}}
            initialDelaySeconds: {{.Values.readinessProbe.initialDelaySeconds}}
            periodSeconds: {{.Values.readinessProbe.initialDelaySeconds}}
        livenessProbe:
            httpGet:
              path: /usermgmt/health-status
              port: 8095
            initialDelaySeconds: 60
            periodSeconds: 10
        env:            
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-db-password
              key: db-password
        volumeMounts:
        - name: www
          mountPath: {{ .Values.volumeMounts.mountPath }}
        ports:
        - containerPort: {{ .Values.port1.containerPort }}
          name: {{ .Values.port1.name }}
          protocol: TCP
        - containerPort: {{ .Values.port2.containerPort }}
          name: {{ .Values.port2.name }}
          protocol: TCP
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      storageClassName: managed-nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi